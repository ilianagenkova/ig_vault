#!/bin/sh  
#PBS -N obsproc_%JTYP%_prep_post_%PDY%_%CC%_%DESC%
#PBS -j oe
#PBS -S /bin/bash
#PBS -q dev
#PBS -l walltime=00:05:00
#PBS -A OBSPROC-DEV
#PBS -l place=vscatter,select=1:ncpus=14:mem=4gb
#PBS -l debug=true

#####################################################################
# Submit notes:
# Run from [ps]tmp when running manually
# When running from cron, output is written to /u/$USER. Bottom of trigger mv's to ptmp
# For specific PDY:
# > jtyp=gdas cyc=00 PDY=20170126 desc=somethingfun /u/iliana.genkova/bin/cycqsub /path/to/triggers/jglobal_prep_post.wc2.pbs
# For latest/current PDY:
# > jtyp=gdas cyc=00 /u/iliana.genkova/bin/cycqsub /path/to/triggers/jglobal_prep_post.wc2.pbs
# cycqsub location: /u/iliana.genkova/bin
#####################################################################

set -xu

export envir=prod
export cyc=%CC%
DESC=%DESC%
JTYP=%JTYP%
export job=${JTYP}_prep_post_$cyc
export PDY=%PDY%

userROOT=/lfs/h2/emc/obsproc/noscrub/$USER

export obsNET=obsproc
export obsproc_ver=v1.3
export obsproc_ver_pckg=v1.2.1 
#export prepobs_ver=1.1.0 #1.0.0
PACKAGEROOTpara=/lfs/h1/ops/para/packages
#export HOMEobsproc=${PACKAGEROOTpara}/obsproc.${obsproc_ver_pckg}   # NCO para
#export HOMEobsproc=${PACKAGEROOT}/obsproc.${obsproc_ver_pckg}       # NCO prod
#export HOMEobsproc=${userROOT}/install/obsproc-rmprep          # SM local
export HOMEobsproc=${userROOT}/GIT/play/obsproc.13                      # IG local

VERSION_FILE=${HOMEobsproc}/versions/run.ver                     # NCO para & prod
#VERSION_FILE=${userROOT}/install/obsproc-rmprep/versions/run.ver # SM local
#VERSION_FILE=${userROOT}/GIT/play/obsproc/versions/run.ver             # IG local
if [ -f $VERSION_FILE ]; then
   . $VERSION_FILE
else
  echo Need version info...  Exiting...
 exit 7
fi

export prepobs_ver=1.2.0 #1.0.0 

#Load the modules
module load grib_util/${grib_util_ver}
module load netcdf/${netcdf_ver}
module load intel/${intel_ver}
module load craype/${craype_ver}
module load cray-mpich/${cray_mpich_ver}
module load cray-pals/${cray_pals_ver}
module load cfp/${cfp_ver}

#use para installation
#module use /apps/ops/para/nco/modulefiles/compiler/intel/19.1.3.304
#use local installation
#module use ${userROOT}/install/bufr-dump/modulefiles                                   # SM local
#module use  ${userROOT}/GIT/bufr-dump/install/modulefiles # IG local
#module load bufr_dump/${bufr_dump_ver}

# use local prepobs installation
module unload prepobs
#module use ${userROOT}/install/prepobs/modulefiles    # SM local
module use ${userROOT}/GIT/play/prepobs.13/install/modulefiles # v1.2 IG local
module load prepobs/${prepobs_ver}

#Check if they exist
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)grib_util/") -eq 0 ]]; then echo "grib_util is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)netcdf/") -eq 0 ]]; then echo "netcdf is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)bufr_dump/") -eq 0 ]]; then echo "bufr_dump is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)prepobs/") -eq 0 ]]; then echo "prepobs is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)intel/") -eq 0 ]]; then echo "intel is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)craype/") -eq 0 ]]; then echo "craype is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-mpich/") -eq 0 ]]; then echo "cray-mpich is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-pals/") -eq 0 ]]; then echo "cray-pals is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cfp/") -eq 0 ]]; then echo "cfp is not loaded!"; fi

export SENDECF=NO   # developer
export SENDDBN=NO   # developer
export SENDSDM=NO   # developer

export DATAROOT=/lfs/h2/emc/ptmp/$USER 
export jlogfile=/lfs/h2/emc/ptmp/$USER/${JTYP}.$PDY.jlogfile

export COMIN_ROOT=/lfs/h2/emc/ptmp/$USER/CRON/${DESC}/com 
export COMOUT_ROOT=/lfs/h2/emc/ptmp/$USER/CRON/${DESC}/com

export DEBUG_LEVEL=3
export KEEPDATA=YES
export LOUD=ON


#export DATCOMIN=/lfs/h1/ops/canned/com/gfs/v16.2/gdascounts
#export SATCOMIN=/lfs/h1/ops/canned/com/gfs/v16.2/gdascounts
#export ARCHCOMIN=/lfs/h1/ops/canned/com/gfs/v16.2 
#export DATCOM1_IN=/lfs/h1/ops/canned/com/gfs/v16.2/gdascounts
#export COMIN1=/lfs/h1/ops/canned/com/gfs/v16.2/$JTYP.

#not sure which one is needed, so let's have both
export COMINgfs=${COMIN_ROOT}/obsproc/${obsproc_ver}/gfs.$PDY/${cyc}/atmos
export COMINGFS=${COMIN_ROOT}/obsproc/${obsproc_ver}/gfs.$PDY/${cyc}/atmos
#example to follow
#COMINgfs=/lfs/h1/ops/prod/com/obsproc/v1.1/gfs.20231023/12/atmos
#COMINGFS=/lfs/h1/ops/prod/com/obsproc/v1.1/gfs.20231023/12/atmos

#export COMIN1=/lfs/h1/ops/para/com/obsproc/v1.2/gdas. # previous cycle's upa_* files ?! check with Shelley # can be taken from PROD or PARA (just to get going the COMIN1)
export COMIN1=/lfs/h1/ops/prod/com/obsproc/v1.2/gdas.
#export COMIN1=${COMOUT_ROOT}/obsproc/v1.2/gdas.

#export COMIN1=${COMOUT_ROOT}/obsproc/v1.1/${JTYP}. #R12 and v1.1 don't coexist!
#COMIN1=/lfs/h1/ops/para/com/obsproc/v1.1/gdas.   #v1.1 or v1.2???

#This is the key variable,to unrestrict 48h odl aircraft, and run this code only on dev machine
#export PROCESS_REMOREST_dm2=YES

$HOMEobsproc/jobs/JOBSPROC_GLOBAL_PREP_POST

err=$?

# When run from cron, the stdout is written to /u/$USER
# mv to ptmp
pbsjobid=$(echo $PBS_JOBID | cut -d'.' -f1)
cronlogfile=/u/$USER/$PBS_JOBNAME.o$pbsjobid
outputdir=/lfs/h2/emc/ptmp/${USER}/CRON/${DESC}/output
if [ -f "$cronlogfile" ]; then
  mkdir -p $outputdir
  mv $cronlogfile ${outputdir}/$PBS_JOBNAME.o$pbsjobid
fi

exit
